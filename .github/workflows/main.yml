#
# Copyright (C) 2024 Antonino Scordino
# Copyright (C) 2024 Souhrud Reddy
#
# SPDX-License-Identifier: Apache-2.0
#

name: Build using foss.crave.io

on:
  workflow_dispatch:
    inputs:
      BASE_PROJECT:
        description: 'Choose a base project:'
        required: true
        default: 'LineageOS 20.0'
        type: choice
        options:
          - 'LineageOS 20.0'
          - 'LineageOS 21.0'
          - 'ArrowOS 13.1'
          - 'DerpFest 13.0'
          - 'CipherOS 14'
      BUILD_DIFFERENT_ROM:
        description: "Command to initialize a different 'repo' project:"
        required: false
        default: "echo 'Build Starting!'"
      REMOVALS:
        description: "Folders to be removed before syncing:"
        required: false
      LOCAL_MANIFEST:
        description: "Personal local manifest [repository or raw]:"
        required: true
        default: 'https://github.com/sounddrill31/local_manifests'
      LOCAL_MANIFEST_BRANCH:
        description: "Personal local manifest's branch:"
        required: false
        default: 'lineage-oxygen'
      DEVICE_NAME:
        description: "Device's codename:"
        required: true
        default: "oxygen"
      PRODUCT_NAME:
        description: "Product to build:"
        required: true
        default: "lineage_oxygen"
      BUILD_COMMAND:
        description: 'Command to be used for compiling:'
        required: true
        default: 'mka bacon'
      BUILD_TYPE:
        description: 'Type of build:'
        required: true
        default: 'userdebug'
        type: choice
        options: 
          - 'eng'
          - 'userdebug'
          - 'user' 
      CLEAN_BUILD:
        description: 'Build with a clean workspace?'
        required: true
        default: 'no'
        type: choice
        options: 
          - 'yes'
          - 'no'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - name: Setup Environment
        uses: actions/checkout@v4

      - name: Prepare Directories
        run: |
          mkdir -p devspace
          sudo mkdir -p /crave-devspaces
          sudo ln -sf ${PWD}/devspace /crave-devspaces
          sudo chmod 777 /crave-devspaces
          export PROJECTFOLDER="/crave-devspaces/${{ github.event.inputs.BASE_PROJECT | replace(' ', '') }}"
          mkdir -p $PROJECTFOLDER
          echo "PROJECTFOLDER=$PROJECTFOLDER" >> $GITHUB_ENV

      - name: Configure 'repo' environment
        run: |
          if ! command -v repo >/dev/null 2>&1; then
            echo "Repo not found. Installing now..."
            mkdir -p ~/bin
            curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
            chmod a+x ~/bin/repo
            sudo ln -sf "$HOME/bin/repo" /usr/bin/repo
            echo "Repo installation complete."
          else
            echo "Repo already installed."
          fi

      - name: Set Git Credentials
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          if [ -z ${GITHUB_TOKEN} ]; then
            echo machine github.com login ${GITHUB_TOKEN} password ${GITHUB_TOKEN} >> ${PWD}/.netrc
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Local Manifests
        run: |
          cd $PROJECTFOLDER
          rm -rf tester
          mkdir tester
          cd tester
          if [ "${{ github.event.inputs.BUILD_DIFFERENT_ROM }}" == "echo 'Build Starting!'" ]; then
            case "${{ github.event.inputs.BASE_PROJECT }}" in
              "ArrowOS 13.1")
                repo init -u https://github.com/ArrowOS/android_manifest.git -b arrow-13.1 --depth=1
                ;;
              "DerpFest 13.0")
                repo init -u https://github.com/DerpFest-AOSP/manifest.git -b 13 --depth=1
                ;;
              "LineageOS 21.0")
                repo init -u https://github.com/LineageOS/android.git -b lineage-21.0 --git-lfs --depth=1
                ;;
              "LineageOS 20.0")
                repo init -u https://github.com/LineageOS/android.git -b lineage-20.0 --git-lfs --depth=1
                ;;
              "CipherOS 14")
                repo init -u https://github.com/CipherOS/android_manifest.git -b fourteen --git-lfs --depth=1
                ;;
            esac
          else
            ${{ github.event.inputs.BUILD_DIFFERENT_ROM }}
          fi
          git clone ${{ github.event.inputs.LOCAL_MANIFEST }} --depth 1 -b ${{ github.event.inputs.LOCAL_MANIFEST_BRANCH }} .repo/local_manifests && \
          timeout 1m repo sync --force-sync || { exit_code=$?; [ $exit_code -eq 124 ] || (echo "Error: Process failed with exit code $exit_code"; exit $exit_code); }
          rm -rf .repo
        timeout-minutes: 10

      - name: Setup 'crave' environment
        if: ${{ env.DCDEVSPACE != '1' }}
        run: |
          curl -s https://raw.githubusercontent.com/accupara/crave/master/get_crave.sh | bash -s --
          mv ${PWD}/crave ${HOME}/bin/
          sudo ln -sf /home/${USER}/bin/crave /usr/bin/crave
          envsubst < ${PWD}/crave.conf.sample >> ${PWD}/crave.conf
          rm -rf ${PWD}/crave.conf.sample
          cp crave.conf $PROJECTFOLDER
        env:
          CRAVE_USERNAME: ${{ secrets.CRAVE_USERNAME }}
          CRAVE_TOKEN: ${{ secrets.CRAVE_TOKEN }}

      - name: Initialize 'repo' project
        run: |
          cd $PROJECTFOLDER
          case "${{ github.event.inputs.BASE_PROJECT }}" in
            "LineageOS 20.0")
              repo init -u https://github.com/accupara/los20.git -b lineage-20.0 --git-lfs --depth=1
              ;;
            *)
              repo init -u https://github.com/${{ github.event.inputs.BASE_PROJECT | replace(' ', '-') }}/android_manifest.git -b ${{ github.event.inputs.BASE_PROJECT | replace(' ', '-') | lower }} --git-lfs --depth=1
              ;;
          esac
        continue-on-error: true

      - name: Start compilation through 'crave'
        run: |
          cd $PROJECTFOLDER
          export CLEAN="${{ github.event.inputs.CLEAN_BUILD == 'yes' ? 'clean' : '' }}"
          crave push ${PWD}/.netrc -d ${HOME}/.netrc
          crave run --no-patch --${CLEAN} "rm -rf .repo/local_manifests/ ${{ github.event.inputs.REMOVALS }} && \
          ${{ github.event.inputs.BUILD_COMMAND }}"
          
      - name: Handle Cancellation
        if: ${{ cancelled() }}
        run: |
          cd $PROJECTFOLDER
          crave stop --all

      - name: Retrieve build artifacts
        run: |
          cd $PROJECTFOLDER
          crave pull out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
          crave pull out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.img

      - name: Upload to Releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            $PROJECTFOLDER/${{ github.event.inputs.DEVICE_NAME }}/*.img
            $PROJECTFOLDER/${{ github.event.inputs.DEVICE_NAME }}/*.zip
          name: ${{ github.event.inputs.PRODUCT_NAME }}-${{ github.run_id }}
          tag_name: ${{ github.run_id }}
          body: |
            Target: ${{ github.event.inputs.PRODUCT_NAME }}-${{ github.event.inputs.BUILD_TYPE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
